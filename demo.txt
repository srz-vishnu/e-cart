package repository

import (
	"e-cart/app/dto"
	"time"

	"github.com/rs/zerolog/log"
	"gorm.io/gorm"
)

type UserRepo interface {
	SaveUserDetails(args *dto.UserDetailSaveRequest) (int64, error)
}

type UserRepoImpl struct {
	db *gorm.DB
}

func NewUserRepo(db *gorm.DB) UserRepo {
	return &UserRepoImpl{
		db: db,
	}
}


func (r *UserRepoImpl) SaveUserDetails(args *dto.UserDetailSaveRequest) (int64, error) {
	log.Info().Msg("%%%%%%%%%%%repo%%%%%%%%%%%%%%%")

	user := domaiUser{
		ID:       args.UserID,
		Address:  args.Address,
		Username: args.UserName,
		Password: args.Password,
		Pincode:  args.Pincode,
	}
	log.Info().Msg("%%%%%%%%%%%repo%%%%%%%%%%%%%%%22222222222222222")
	//GORM's Create method to insert the new user
	if err := r.db.Table("userdetail").Create(&user).Error; err != nil {
		return 0, err
	}
	log.Info().Msg("%%%%%%%%%%%repo%%%%%%%%%%%%%%% 3333333333333333333333333333")
	return user.ID, nil
}
